report {
   enabled = true
   file = '/data/output/report.html'
}

params {
   max_memory = '5 GB'
   max_cpus = 2
   input = '/input/sarek/input.csv'
   igenomes_base = 's3://ngi-igenomes/igenomes'
   fasta = '/input/sarek/reference/genome.fasta'
   dbsnp = '/input/sarek/reference/dbsnp_146.hg38.vcf.gz'
   germline_resource = '/input/sarek/reference/gnomAD.r2.1.1.vcf.gz'
   known_indels = '/input/sarek/reference/mills_and_1000G.indels.vcf.gz'
   intervals = '/input/sarek/reference/genome.interval_list'
   save_reference = false
   outdir = '/data/output/'
}

process {
   pod {
      nodeSelector = 'cwsexperiment=true'
   }
   executor = 'k8s'
}

k8s {
   pod = [[nodeSelector:'cwsscheduler=true'], [volumeClaim:'api-exp-input', mountPath:'/input']]
   scheduler {
      nodeSelector = 'cwsscheduler=true'
      name = 'workflow-scheduler'
      namespace = 'cws'
      serviceAccount = 'nextflowscheduleraccount'
      cpu = '2'
      autoClose = false
      runAsUser = 0
      batchSize = 1000
      container = 'commonworkflowscheduler/kubernetesscheduler:v1.0'
   }
   debug {
      yaml = true
   }
   namespace = 'cws'
   serviceAccount = 'nextflow'
   workDir = '/data/work/'
   projectDir = '/data/project/'
   imagePullPolicy = 'IfNotPresent'
   launchDir = '/data/launch/'
   runAsUser = 0
   fetchNodeName = true
   storageClaimName = 'api-exp-data'
   storageMountPath = '/data'
}

executor {
   queueSize = 4
}

dag {
   enabled = true
   file = '/data/output/dag.html'
}

trace {
   enabled = true
   sep = ';'
   raw = true
   file = '/data/output/trace.csv'
   fields = 'task_id,hostname,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt,workdir,scratch,error_action'
}

runName = 'desperate-pesquet'
